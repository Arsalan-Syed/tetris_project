import matplotlib.pyplot as plt

# pop 100, p_mut = 10%, roulette_wheel = True, moves = 500
# reset = False, crossover = 'single'
# best weights = [ -4.382 -12.933   6.542  -8.092  -1.432]
data_p100_m10_rw_m500 = [
    [0.000, 41.250, 706.000],
    [0.000, 359.110, 734.000],
    [0.000, 452.060, 792.000],
    [0.000, 454.880, 754.000],
    [0.000, 551.210, 762.000],
    [0.000, 583.050, 779.000],
    [0.000, 610.330, 770.000],
    [0.000, 558.710, 756.000],
    [0.000, 567.800, 780.000],
    [0.000, 648.760, 801.000],
    [0.000, 551.770, 786.000],
    [0.000, 604.870, 785.000],
    [0.000, 608.850, 795.000],
    [0.000, 658.840, 814.000],
    [0.000, 627.920, 784.000],
    [0.000, 620.990, 820.000],
    [0.000, 642.840, 803.000],
    [0.000, 641.570, 789.000],
    [0.000, 634.410, 759.000],
    [0.000, 607.500, 860.000],
    [0.000, 631.460, 818.000],
    [0.000, 615.860, 766.000],
    [0.000, 615.180, 777.000],
    [0.000, 621.790, 762.000],
    [0.000, 652.830, 771.000],
    [0.000, 670.100, 746.000],
    [0.000, 613.590, 774.000],
    [0.000, 648.990, 781.000],
    [0.000, 651.860, 761.000],
    [0.000, 646.970, 775.000],
    [0.000, 655.780, 783.000],
    [0.000, 656.250, 827.000],
    [0.000, 651.930, 794.000],
    [0.000, 635.030, 769.000],
    [0.000, 604.020, 771.000],
    [0.000, 638.730, 796.000],
    [0.000, 642.220, 773.000],
    [0.000, 601.640, 780.000],
    [0.000, 598.770, 793.000],
    [0.000, 616.000, 780.000],
    [0.000, 603.730, 811.000],
    [0.000, 629.550, 797.000],
    [0.000, 599.950, 777.000],
    [0.000, 600.220, 794.000],
    [0.000, 656.060, 798.000],
    [0.000, 630.000, 761.000],
    [0.000, 625.460, 788.000],
    [0.000, 631.300, 762.000],
    [0.000, 630.440, 761.000],
    [0.000, 651.280, 752.000]
]

# pop 100, p_mut = 25%, roulette_wheel = True, moves = 500
# reset = False, crossover = 'single'
# best weights = [-11.144 -18.508  -5.328  -1.654  -3.524]
data_p100_m25_rw_m500 = [
    [0.000, 91.170, 747.000],
    [0.000, 418.280, 759.000],
    [0.000, 476.830, 792.000],
    [0.000, 475.950, 794.000],
    [0.000, 455.320, 792.000],
    [0.000, 509.130, 792.000],
    [0.000, 520.360, 793.000],
    [0.000, 533.120, 773.000],
    [0.000, 553.050, 766.000],
    [0.000, 547.360, 786.000],
    [0.000, 495.140, 860.000],
    [0.000, 521.660, 767.000],
    [0.000, 569.140, 785.000],
    [0.000, 588.300, 821.000],
    [0.000, 629.780, 790.000],
    [0.000, 620.230, 848.000],
    [0.000, 567.830, 810.000],
    [0.000, 589.330, 782.000],
    [0.000, 538.810, 769.000],
    [0.000, 637.990, 904.000],
    [0.000, 509.760, 802.000],
    [0.000, 594.100, 802.000],
    [0.000, 566.300, 913.000],
    [0.000, 558.040, 773.000],
    [0.000, 611.760, 779.000],
    [0.000, 576.900, 782.000],
    [0.000, 600.510, 769.000],
    [0.000, 612.060, 763.000],
    [0.000, 631.290, 756.000],
    [0.000, 610.370, 785.000],
    [0.000, 645.600, 769.000],
    [0.000, 658.360, 770.000],
    [0.000, 653.950, 764.000],
    [0.000, 617.330, 773.000],
    [0.000, 646.310, 769.000],
    [0.000, 626.490, 798.000],
    [0.000, 654.980, 784.000],
    [0.000, 662.490, 824.000],
    [0.000, 678.740, 773.000],
    [0.000, 661.280, 760.000],
    [0.000, 681.190, 770.000],
    [0.000, 662.470, 773.000],
    [0.000, 671.160, 765.000],
    [0.000, 625.770, 780.000],
    [0.000, 659.100, 798.000],
    [0.000, 656.140, 754.000],
    [0.000, 651.280, 755.000],
    [0.000, 648.240, 785.000],
    [0.000, 705.640, 771.000],
    [0.000, 665.120, 762.000]
]

# pop 100, p_mut = 5%, roulette_wheel = True, moves = 500
# reset = False, crossover = 'uniform'
# best weights = -2.581 -22.899  -6.611  -5.472  -1.143
data_p100_m5_rw_m500_uniform = [
    [8.000, 110.890, 744.000],
    [11.000, 401.670, 754.000],
    [11.000, 511.950, 752.000],
    [16.000, 566.640, 787.000],
    [13.000, 565.860, 767.000],
    [20.000, 617.500, 759.000],
    [23.000, 652.720, 761.000],
    [19.000, 639.630, 754.000],
    [19.000, 656.750, 765.000],
    [44.000, 669.740, 758.000],
    [25.000, 647.850, 761.000],
    [104.000, 677.140, 747.000],
    [12.000, 651.600, 743.000],
    [10.000, 668.680, 782.000],
    [96.000, 705.410, 759.000],
    [66.000, 671.900, 763.000],
    [24.000, 689.270, 758.000],
    [17.000, 695.490, 773.000],
    [11.000, 662.370, 750.000],
    [22.000, 657.420, 758.000],
    [16.000, 689.780, 741.000],
    [24.000, 682.880, 758.000],
    [22.000, 664.330, 744.000],
    [23.000, 690.840, 756.000],
    [20.000, 676.860, 747.000],
    [21.000, 658.960, 737.000],
    [189.000, 695.760, 743.000],
    [40.000, 680.980, 745.000],
    [20.000, 646.040, 750.000],
    [19.000, 634.350, 750.000],
    [20.000, 670.110, 766.000],
    [16.000, 646.760, 781.000],
    [272.000, 703.400, 754.000],
    [17.000, 682.530, 766.000],
    [30.000, 678.260, 766.000],
    [25.000, 691.050, 764.000],
    [20.000, 677.060, 766.000],
    [18.000, 684.250, 771.000],
    [15.000, 694.550, 766.000],
    [37.000, 694.580, 757.000],
    [15.000, 642.500, 746.000],
    [22.000, 675.470, 779.000],
    [23.000, 685.410, 781.000],
    [17.000, 671.200, 820.000],
    [19.000, 686.840, 803.000],
    [21.000, 669.520, 782.000],
    [21.000, 682.340, 809.000],
    [73.000, 661.950, 758.000],
    [27.000, 680.660, 805.000],
    [90.000, 687.620, 795.000]]


# pop = 100, p_mut = 5%, roulette_wheel = True, moves = 500,
# reset = False, crossover = 'single'
data_p100_m5_rw_m500 = [
    [9.000, 110.850, 747.000],
    [9.000, 366.310, 762.000],
    [10.000, 536.940, 801.000],
    [17.000, 606.510, 824.000],
    [10.000, 570.210, 771.000],
    [15.000, 580.450, 782.000],
    [23.000, 658.300, 764.000],
    [12.000, 644.440, 771.000],
    [41.000, 637.580, 825.000],
    [19.000, 622.580, 796.000],
    [18.000, 630.210, 810.000],
    [24.000, 630.430, 779.000],
    [12.000, 647.200, 778.000],
    [19.000, 693.120, 783.000],
    [88.000, 691.230, 787.000],
    [19.000, 652.450, 779.000],
    [12.000, 642.880, 793.000],
    [17.000, 656.420, 790.000],
    [19.000, 647.960, 762.000],
    [16.000, 657.720, 755.000],
    [17.000, 636.950, 823.000],
    [20.000, 689.800, 778.000],
    [15.000, 677.220, 750.000],
    [16.000, 650.020, 742.000],
    [18.000, 646.380, 754.000],
    [15.000, 648.040, 769.000]
    ]

def make_chart(data, label, fname):
    plt.figure()
    plt.title(label)
    plt.plot([d[2] for d in data])
    plt.plot([d[1] for d in data])
    plt.plot([d[0] for d in data])
    plt.legend(['Best', 'Average', 'Worst'])
    plt.ylabel('Score')
    plt.xlabel('Generation')
    plt.xticks([int(e) for e in plt.xticks()[0] if int(e) >= 0][:-1])
    plt.grid(True)
    plt.savefig(fname)

make_chart(data_p100_m5_rw_m500,
           'RW-sel., pop. 100, m-rate 5%',
           'rw_p100_m5.png')
make_chart(data_p100_m10_rw_m500,
            'Rw-sel., pop. 100, m-rate 10%',
            'rw_p100_m10.png')
make_chart(data_p100_m25_rw_m500,
            'Rw-sel., pop. 100, m-rate 25%',
            'rw_p100_m25.png')
make_chart(data_p100_m5_rw_m500_uniform,
            'Rw-sel., pop. 100, m-rate 5%',
            'rw_p100_m5_uniform.png')
